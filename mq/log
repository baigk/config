g++ -std=c++11 -g -ggdb -I./lib -I./ -I./kafka -c MqFactory.cpp -o ./temp/MqFactory.o
g++ -std=c++11 -g -ggdb -I./lib -I./ -I./kafka -c test.cpp -o ./temp/test.o
g++ -std=c++11 -g -ggdb -I./lib -I./ -I./kafka -c kafka/KafkaConsumer.cpp -o ./temp/kafka/KafkaConsumer.o
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:38:1: error: expected class-name before '{' token
 {
 ^
kafka/KafkaConfig.h: In constructor 'KafkaGlobalConfig::KafkaGlobalConfig(const MqConfig&)':
kafka/KafkaConfig.h:41:3: error: '_conf' was not declared in this scope
   _conf = shared_ptr<RdKafka::Conf>(RdKafka::Conf::create(RdKafka::Conf::CONF_GLOBAL));
   ^
kafka/KafkaConfig.h:42:13: error: 'set' was not declared in this scope
   set(config);
             ^
kafka/KafkaConfig.h: In constructor 'KafkaTopicConfig::KafkaTopicConfig(const MqConfig&)':
kafka/KafkaConfig.h:49:3: error: 'tconf_' was not declared in this scope
   tconf_ = shared_ptr<RdKafka::Conf>(RdKafka::Conf::create(RdKafka::Conf::CONF_TOPIC));
   ^
kafka/KafkaConfig.h: At global scope:
kafka/KafkaConfig.h:58:23: error: 'KafakProducerConfig' was not declared in this scope
     static shared_ptr<KafakProducerConfig> create(const MqConfig & config = MqConfig()) {
                       ^
kafka/KafkaConfig.h:58:42: error: template argument 1 is invalid
     static shared_ptr<KafakProducerConfig> create(const MqConfig & config = MqConfig()) {
                                          ^
kafka/KafkaConfig.h: In static member function 'static int KafkaProducerConfig::create(const MqConfig&)':
kafka/KafkaConfig.h:61:14: error: 'class KafkaProducerConfig' has no member named 'addConfigItem'
         kpc->addConfigItem(config);
              ^
kafka/KafkaConfig.h:63:16: error: cannot convert 'std::shared_ptr<KafkaProducerConfig>' to 'int' in return
         return kpc;
                ^
kafka/KafkaConfig.h: At global scope:
kafka/KafkaConfig.h:71:23: error: 'KafakConsumerConfig' was not declared in this scope
     static shared_ptr<KafakConsumerConfig> create(vector<MqConfigItem> * config>) {
                       ^
kafka/KafkaConfig.h:71:42: error: template argument 1 is invalid
     static shared_ptr<KafakConsumerConfig> create(vector<MqConfigItem> * config>) {
                                          ^
kafka/KafkaConfig.h:71:80: error: expected ',' or '...' before '>' token
     static shared_ptr<KafakConsumerConfig> create(vector<MqConfigItem> * config>) {
                                                                                ^
kafka/KafkaConfig.h: In static member function 'static int KafkaConsumerConfig::create(std::vector<std::pair<std::basic_string<char>, std::basic_string<char> > >*)':
kafka/KafkaConfig.h:74:14: error: 'class KafkaConsumerConfig' has no member named 'addConfigItem'
         kcc->addConfigItem(config);
              ^
kafka/KafkaConfig.h:76:16: error: cannot convert 'std::shared_ptr<KafkaConsumerConfig>' to 'int' in return
         return kcc;
                ^
In file included from kafka/KafkaTopics.h:3:0,
                 from kafka/KafkaConsumer.cpp:3:
kafka/KafkaConfig.h: At global scope:
kafka/KafkaConfig.h:17:7: error: redefinition of 'class KafkaConfig'
 class KafkaConfig 
       ^
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:17:7: error: previous definition of 'class KafkaConfig'
 class KafkaConfig 
       ^
In file included from kafka/KafkaTopics.h:3:0,
                 from kafka/KafkaConsumer.cpp:3:
kafka/KafkaConfig.h:37:7: error: redefinition of 'class KafkaGlobalConfig'
 class KafkaGlobalConfig : public kafkaConfig
       ^
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:37:7: error: previous definition of 'class KafkaGlobalConfig'
 class KafkaGlobalConfig : public kafkaConfig
       ^
In file included from kafka/KafkaTopics.h:3:0,
                 from kafka/KafkaConsumer.cpp:3:
kafka/KafkaConfig.h:46:7: error: redefinition of 'class KafkaTopicConfig'
 class KafkaTopicConfig : public KafkaConfig {
       ^
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:46:7: error: previous definition of 'class KafkaTopicConfig'
 class KafkaTopicConfig : public KafkaConfig {
       ^
In file included from kafka/KafkaTopics.h:3:0,
                 from kafka/KafkaConsumer.cpp:3:
kafka/KafkaConfig.h:54:7: error: redefinition of 'class KafkaProducerConfig'
 class KafkaProducerConfig : public KafkaGlobalConfig {
       ^
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:54:7: error: previous definition of 'class KafkaProducerConfig'
 class KafkaProducerConfig : public KafkaGlobalConfig {
       ^
In file included from kafka/KafkaTopics.h:3:0,
                 from kafka/KafkaConsumer.cpp:3:
kafka/KafkaConfig.h:67:7: error: redefinition of 'class KafkaConsumerConfig'
 class KafkaConsumerConfig : public KafkaGlobalConfig {
       ^
In file included from kafka/KafkaConsumer.h:4:0,
                 from kafka/KafkaConsumer.cpp:2:
kafka/KafkaConfig.h:67:7: error: previous definition of 'class KafkaConsumerConfig'
 class KafkaConsumerConfig : public KafkaGlobalConfig {
       ^
In file included from kafka/KafkaConsumer.cpp:3:0:
kafka/KafkaTopics.h:10:18: error: extra qualification 'KafkaTopics::' on member 'createTopic' [-fpermissive]
     unsigned int KafkaTopics::createTopic(shared_ptr<RdKafka::Producer> producer, string &topic, shared_ptr<KafkaTopicConfig> conf = nullptr);
                  ^
In file included from kafka/KafkaConsumer.cpp:3:0:
kafka/KafkaTopics.h:11:18: error: extra qualification 'KafkaTopics::' on member 'createTopic' [-fpermissive]
     unsigned int KafkaTopics::createTopic(shared_ptr<RdKafka::Producer> producer, vector<string> &topic, vector<MqConfigItem> * config = nullptr);
                  ^
kafka/KafkaTopics.h:12:18: error: extra qualification 'KafkaTopics::' on member 'createTopic' [-fpermissive]
     unsigned int KafkaTopics::createTopic(shared_ptr<RdKafka::Producer> producer, const string & topic, vector<MqConfigItem> * config = nullptr);
                  ^
kafka/KafkaTopics.h:16:32: error: 'KafkaTopic' has not been declared
     shared_ptr<RdKafka::Topic> KafkaTopic::getTopic(const string &topic)
                                ^
kafka/KafkaTopics.h:16:72: error: expected ';' at end of member declaration
     shared_ptr<RdKafka::Topic> KafkaTopic::getTopic(const string &topic)
                                                                        ^
kafka/KafkaTopics.h:19:51: error: template argument 2 is invalid
  unordered_map<string, shared_ptr<RdKafka::Topic> __topics;
                                                   ^
kafka/KafkaTopics.h:19:51: error: template argument 5 is invalid
kafka/KafkaConsumer.cpp:65:1: error: prototype for 'KafkaConsumer::KafkaConsumer(std::string, MqConfig*, MqConfig*)' does not match any in class 'KafkaConsumer'
 KafkaConsumer::KafkaConsumer(string broker, MqConfig * global, MqConfig * topic) {
 ^
In file included from kafka/KafkaConsumer.cpp:2:0:
kafka/KafkaConsumer.h:17:7: error: candidates are: constexpr KafkaConsumer::KafkaConsumer(const KafkaConsumer&)
 class KafkaConsumer : MqConsumer
       ^
kafka/KafkaConsumer.h:22:3: error:                 KafkaConsumer::KafkaConsumer(std::string, const MqConfig&)
   KafkaConsumer(string broker ="localhost", const MqConfig & config = MqConfig());
   ^
kafka/KafkaConsumer.cpp: In function 'int main1(int, char**)':
kafka/KafkaConsumer.cpp:200:15: error: 'sleep' was not declared in this scope
   sleep(100000);
               ^
make: *** [kafka/KafkaConsumer.o] Error 1
